---
- name: Update Packages on Linux Nodes
  hosts: all
  become: yes  # Run tasks with elevated privileges (sudo)

  tasks:
    - name: Update package cache
      package_facts:
        manager: auto
      tags:
        - system

    - name: Update all packages
      package:
        name: "*"
        state: latest
      tags:
        - system
  
    - name: Update Hostname
      hostname:
        name: "{{ node_name }}"
      tags:
        - system
    
    - name: Set MOTD
      copy:
        src: "files/motd_{{ group_name }}"
        dest: /etc/motd
        owner: root
        group: root
        mode: '644'
      tags:
        - system
    
    - name: Install apt packages
      ansible.builtin.apt:
        name: open-iscsi
        state: present

- name: Install k3s master
  hosts: k3s-master
  gather_facts: false
  become: yes 

  tasks:
    - name: Set k3s args to determine k3s networking
      set_fact:
        k3s_args: "INSTALL_K3S_EXEC='--flannel-backend=none --disable-network-policy' {{ k3s_args }}"
      when: cilium_enabled
      tags: k3s

    - name: Install k3s
      shell: "curl -sfL {{ k3s_url }} | INSTALL_K3S_VERSION={{ k3s_version }} {{ k3s_args }} sh -"
      tags: k3s
   
    - name: Edit kube config for remote access
      ansible.builtin.shell: |
        cp {{ k3s_config_file_path }} {{ k3s_config_file_path }}.remote
        sed -i 's/127.0.0.1/{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}/g' {{ k3s_config_file_path }}.remote
        sed -i 's/default/{{ stack | default('default') }}/g' {{ k3s_config_file_path }}.remote

    - name: Read Kubeconfig File
      ansible.builtin.fetch:
        src: "{{ k3s_config_file_path }}.remote"
        dest: "{{ k3s_local_config_file_location }}/{{ stack | default('default') }}"
        flat: yes
      tags: k3s

    # Read and save master key
    - name: Save Master Node Key
      ansible.builtin.shell: cat /var/lib/rancher/k3s/server/node-token
      register: master_key
      tags: k3s

    # Add MASTER HOST and key to be accessed in following playbook for node registration
    - name: Register master host
      add_host:
        name: "MASTER"
        MASTER_KEY: "{{ master_key.stdout }}"
      tags: k3s

- name: Install k3s workers
  hosts: k3s-workers
  gather_facts: false  # Disable gathering facts for this example
  become: yes

  tasks:
    - name: Register Worker Node
      shell: "curl -sfL {{ k3s_url }} | INSTALL_K3S_VERSION={{ k3s_version }} K3S_URL={{ master_node_url }} K3S_TOKEN={{ hostvars['MASTER']['MASTER_KEY'] }} sh -"
      tags: 
        - k3s
        - workers

- name: Setup Cilium
  hosts: [k3s-master, k3s-workers]
  become: yes

  tasks:
    - name: Mount eBPF FS
      shell: mount bpffs -t bpf /sys/fs/bpf
      when: cilium_enabled
      tags:
        - k3s
        - cilium

- name: Install Cilium (Helm)
  hosts: localhost

  tasks:
    - name: Add Cilium Repo
      kubernetes.core.helm_repository:
        name: cilium
        repo_url: https://helm.cilium.io
      when: cilium_enabled
      tags:
        - cilium

    - name: Install Cilium
      kubernetes.core.helm:
        kubeconfig: "~/.kube/{{ stack }}"
        release_namespace: "{{ cilium_namespace | default('kube-system') }}"
        name: cilium
        chart_ref: cilium/cilium
        chart_version: "{{ cilium_chart_version }}"
        values:
          hubble:
            listenAddress: ":4244"
            relay:
              enabled: true
            ui:
              enabled: true
              service:
                type: NodePort
      when: cilium_enabled
      tags:
        - cilium
